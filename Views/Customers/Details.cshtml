@model VeeStoreA.Models.Customer

@{

    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

    <div class=" content">
        <div class="content-overlay"></div>
        <div class="header-navbar-shadow"></div>
        <div class="content-wrapper container-xxl p-0">
            <div class="content-header row">
                <div class="content-header-left col-md-9 col-12 mb-2">
                    <div class="row breadcrumbs-top">
                        <div class="col-12">
                            <h2 class="content-header-title float-start mb-0">Profile</h2>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content-body">
                <div class="row">
                    <div class="col-12">
                        <ul class="nav nav-pills mb-2">
                            <!-- account -->
                            <li class="nav-item">
                                <a class="nav-link active" style="pointer-events:none;">
                                    <i data-feather="user" class="font-medium-3 me-50"></i>
                                    <span class="fw-bold">Account</span>
                                </a>
                            </li>
                            <!-- security -->
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Orders", "Customers", new { id = Model.Email + "/" })">
                                    <i data-feather="archive" class="font-medium-3 me-50"></i>
                                    <span class="fw-bold">My Orders</span>
                                </a>
                            </li>
                        </ul>

                      
                            @Html.AntiForgeryToken()
                            <!-- profile -->
                            <div class="card">
                                <div class="card-header border-bottom">
                                    <h4 class="card-title">Profile Details</h4>
                                </div>
                                <div class="card-body py-2 my-25">
                                    <!-- form -->
                                    @using (Html.BeginForm("Edit", "Customers", FormMethod.Post, new { @class = "validate-form pt-50" }))
                                    {
                                        @Html.AntiForgeryToken()
                                       
                                        <div class="row">
                                            <div class="col-12 col-sm-6 mb-1">
                                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-12 col-sm-6 mb-1">
                                                @Html.LabelFor(model => model.Currency, "Currency", htmlAttributes: new { @class = "form-label" })

                                                @Html.DropDownList("CurrencyId", null, htmlAttributes: new { @class = "hide-search form-select select2-hidden-accessible" })
                                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-12 col-sm-6 mb-1">
                                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", @disabled = true } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="col-12 col-sm-6 mb-1">
                                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "form-label" })
                                                @Html.HiddenFor(model => model.PhoneNumber)
                                                <div class="input-group">
                                                    <span class="input-group-text" id="basic-addon1">+974 </span>
                                                    <input type="text" disabled class="form-control" placeholder="Phone Number" value="@(Model.PhoneNumber == null?"No Phone Number Added":Model.PhoneNumber.Replace("+974",""))" aria-describedby="button-addon2">
                                                    <a href="@Url.Action("AddPhoneNumber","Manage")" class="btn btn-outline-primary waves-effect" id="button-addon2" type="button">@(Model.PhoneNumber == null?"Add Phone Number":"Change Phone Number")</a>
                                                </div>

                                            </div>

                                            <div class="col-12 col-sm-6 mb-1">
                                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @placeholder = "Gender", @disabled = true } })
                                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="col-12">
                                                @Html.HiddenFor(model => model.JoinedAt)
                                                @Html.HiddenFor(model => model.Email)
                                                @Html.HiddenFor(model => model.Gender)
                                                <input type="submit" value="Save Changes" class="btn btn-primary mt-1 me-1" />

                                            </div>
                                        </div>

                                    }
                                    <!--/ form -->
                                </div>
                            </div>
                        
                        @using (Html.BeginForm("AddCreditCard", "Customers", FormMethod.Post, new { id = "addCard" }))

                        {
                            <div class="payment-type">
                                <div class="card">
                                    <div class="card-header border-bottom">
                                        <h4 class="card-title">Payment Methods</h4>
                                    </div>
                                    <div class="card-body my-1 py-25">
                                        <div class="row gx-4">
                                            <div class="col-lg-6">
                                                <h6 class="fw-bolder mb-2">Add Card</h6>

                                                <div id="creditCardForm" class="row gx-2 gy-1 validate-form">

                                                    <div class="col-12 mt-0">
                                                        @Html.LabelFor(m => m.Carts.First().CreditCard.Number, htmlAttributes: new { @class = "form-label" })
                                                        @Html.EditorFor(model => model.Carts.First().CreditCard.Number, new { htmlAttributes = new { @class = "form-control add-credit-card-mask", @placeholder = "XXXX XXXX XXXX XXXX", form = "addCard" } })
                                                        @Html.ValidationMessageFor(model => model.Carts.First().CreditCard.Number, "", new { @class = "text-danger" })

                                                        @*<label class="form-label" for="addCardNumber">Card Number</label>
                                        <div class="input-group input-group-merge">
                                            <input id="addCardNumber" name="addCard" form="addCard" class="form-control add-credit-card-mask" type="text" placeholder="XXXX XXXX XXXX XXXX" aria-describedby="addCard2" data-msg="Please enter your credit card number" data-com.bitwarden.browser.user-edited="yes" aria-invalid="false">

                                        </div>*@
                                                    </div>

                                                    <div class="col-md-6">
                                                        @Html.LabelFor(m => m.Carts.First().CreditCard.Name, htmlAttributes: new { @class = "form-label" })
                                                        @Html.EditorFor(model => model.Carts.First().CreditCard.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Dania Itani", form = "addCard" } })
                                                        @Html.ValidationMessageFor(model => model.Carts.First().CreditCard.Name, "", new { @class = "text-danger" })
                                                        @*<label class="form-label" for="addCardName">Name On Card</label>
                                        <input type="text" id="addCardName" form="addCard" class="form-control" placeholder="John Doe" data-com.bitwarden.browser.user-edited="yes" aria-invalid="false">*@
                                                    </div>

                                                    <div class="col-6 col-md-3">
                                                        @Html.LabelFor(m => m.Carts.First().CreditCard.Expiry, htmlAttributes: new { @class = "form-label" })
                                                        @Html.EditorFor(model => model.Carts.First().CreditCard.Expiry, new { htmlAttributes = new { @class = "form-control add-expiry-date-mask", @placeholder = "MM/YY", maxlength = "5", form = "addCard" } })
                                                        @Html.ValidationMessageFor(model => model.Carts.First().CreditCard.Expiry, "", new { @class = "text-danger" })
                                                        @*<label class="form-label" for="addCardExpiryDate">Exp. Date</label>
                                        <input type="text" id="addCardExpiryDate" form="addCard" class="form-control add-expiry-date-mask" placeholder="MM/YY" data-com.bitwarden.browser.user-edited="yes" aria-invalid="false">*@
                                                    </div>

                                                    <div class="col-6 col-md-3">
                                                        @Html.LabelFor(m => m.Carts.First().CreditCard.CVV, htmlAttributes: new { @class = "form-label" })
                                                        @Html.EditorFor(model => model.Carts.First().CreditCard.CVV, new { htmlAttributes = new { @class = "form-control add-cvv-code-mask", @placeholder = "CVV", @maxlength = "3", form = "addCard" } })
                                                        @Html.ValidationMessageFor(model => model.Carts.First().CreditCard.CVV, "", new { @class = "text-danger" })


                                                        @*<label class="form-label" for="addCardCvv">CVV</label>
                                        <input type="text" id="addCardCvv" form="addCard" class="form-control add-cvv-code-mask" maxlength="3" placeholder="cvv">*@
                                                    </div>

                                                    <div class="col-12 mt-1">
                                                        @Html.LabelFor(model => model.Carts.First().CreditCard.Type, htmlAttributes: new { @class = "form-label" })

                                                        @Html.DropDownList("Type", null, htmlAttributes: new { @class = "hide-search form-select select2-hidden-accessible", form = "addCard" })
                                                        @Html.ValidationMessageFor(model => model.Carts.First().CreditCard.Type, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-12 mt-2 pt-1">
                                                        <button type="submit" form="addCard" class="btn btn-primary me-1 w-100 waves-effect waves-float waves-light">Save Card For Future Payments</button>
                                                    </div>


                                                </div>

                                            </div>
                                            <div class="col-lg-6 mt-2 mt-lg-0">
                                                <h6 class="fw-bolder mb-2">My Cards</h6>
                                                <div class="added-cards">
                                                    @if (Model.CreditCards.Count() == 0)
                                                    {
                                                        <div class="detail-amt discount-amt text-danger">No Cards Found</div>
                                                    }
                                                    else
                                                    {
                                                        foreach (var creditCard in Model.CreditCards)
                                                        {
                                                            Html.RenderPartial("~/Views/Carts/_AddedCard.cshtml", creditCard);
                                                        }
                                                    }


                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                           
                                 }
                        <!-- deactivate account  -->
                        @*<div class="card">
            <div class="card-header border-bottom">
                <h4 class="card-title">Delete Account</h4>
            </div>
            <div class="card-body py-2 my-25">
                <div class="alert alert-warning">
                    <h4 class="alert-heading">Are you sure you want to delete your account?</h4>
                    <div class="alert-body fw-normal">
                        Once you delete your account, there is no going back. Please be certain.
                    </div>
                </div>

                <form id="formAccountDeactivation" class="validate-form" onsubmit="return false">
                    <div class="form-check">
                        <input class="form-check-input"
                               type="checkbox"
                               name="accountActivation"
                               id="accountActivation"
                               data-msg="Please confirm you want to delete account" />
                        <label class="form-check-label font-small-3" for="accountActivation">
                            I confirm my account deactivation
                        </label>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-danger deactivate-account mt-1">Deactivate Account</button>
                    </div>
                </form>
            </div>
        </div>*@
                        <!--/ profile -->
                    </div>
                        </div>
            </div>
        </div>
    </div>
