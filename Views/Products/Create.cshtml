@model VeeStoreA.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/Content/Theme/app-assets/vendors/css/forms/select/select2.min.css">
<style>
    .select2-selection__arrow b {
        display: none !important;
    }
</style>
<h2>Create Product</h2>
@if (ViewBag.error != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Error</strong> @ViewBag.error
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()




<div class="card" data-select2-id="59">
    <div class="card-header border-bottom">
        <h4 class="card-title">Create a Product</h4>
    </div>
    <div class="card-body py-2 my-25" data-select2-id="58">
        <!-- header section -->
        @*<div class="d-flex">
            <div class="d-flex align-items-end mt-75 ms-1">
                <div>
                    <label for="account-upload" class="btn btn-sm btn-primary mb-75 me-75 waves-effect waves-float waves-light">Upload</label>
                    <input type="file" id="productImage" name="productImage"  accept="image/*" data-com.bitwarden.browser.user-edited="yes">
                    <button type="button" id="account-reset" class="btn btn-sm btn-outline-secondary mb-75 waves-effect">Reset</button>
                    <p class="mb-0">Allowed file types: png, jpg, jpeg.</p>
                </div>
            </div>
        </div>*@
        <!--/ header section -->
        <!-- form -->
        <form class="validate-form mt-2 pt-50" novalidate="novalidate" data-select2-id="12">
            <div class="row" data-select2-id="57">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-12 col-sm-12 mb-1">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 col-sm-6 mb-1">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                </div>

                <div class="col-12 col-sm-6 mb-1">
                    @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Name" } })
                    @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                </div>

                <div class="col-12 col-sm-6 mb-1">
                    @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "form-label" })

                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "hide-search form-select select2-hidden-accessible" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 col-sm-6 mb-1">
                    @Html.LabelFor(model => model.Status, "Visibility", htmlAttributes: new { @class = "form-label" })

                    @Html.DropDownList("Status", null, htmlAttributes: new { @class = "hide-search form-select select2-hidden-accessible" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
                <div class="">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })

                    @Html.TextAreaFor(model => model.Description, 3, 5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>


                <div class="col-12">
                    <button type="submit" class="btn btn-primary mt-1 me-1 waves-effect waves-float waves-light">Add Product</button>

                    @Html.ActionLink("Back to Products", "Index", null, htmlAttributes: new { @class = "btn btn-outline-secondary mt-1 waves-effect" })
                </div>
            </div>
        </form>
        <!--/ form -->
    </div>
</div>
}



@Scripts.Render("~/Content/Theme/app-assets/vendors/js/jquery/jquery.min.js")
<script src="~/Content/Theme/app-assets/vendors/js/forms/select/select2.full.min.js"></script>

<script src="~/Content/Theme/app-assets/js/scripts/forms/form-select2.js"></script>