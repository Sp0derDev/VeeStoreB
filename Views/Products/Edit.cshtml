@model VeeStoreA.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/Content/Theme/app-assets/vendors/css/forms/select/select2.min.css">
<style>
    .select2-selection__arrow b {
        display: none !important;
    }
</style>
<h2>Edit</h2>

@if (ViewBag.error != null)
{
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">Error</h4>
        <div class="alert-body">
            @ViewBag.error
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card" data-select2-id="59">
        <div class="card-header border-bottom">
            <h4 class="card-title">Edit a Product</h4>
        </div>

        <div class="card-body py-2 my-25" data-select2-id="58">
            <form class="validate-form mt-2 pt-50" novalidate="novalidate" data-select2-id="12">
                <div class="row" data-select2-id="57">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="col-12 col-sm-12 mb-1">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-6 mb-1">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-12 col-sm-6 mb-1">
                        @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Image" } })
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                    </div>



                    <div class="col-12 col-sm-6 mb-1">
                        @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "form-label" })

                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "hide-search form-select select2-hidden-accessible" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12 col-sm-6 mb-1">
                        @Html.LabelFor(model => model.Status, "Visibility", htmlAttributes: new { @class = "form-label" })

                        @Html.DropDownList("Status", null, htmlAttributes: new { @class = "hide-search form-select select2-hidden-accessible" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12 col-sm-12 mb-1">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })

                        @Html.TextAreaFor(model => model.Description, 3, 5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>


                    @Html.HiddenFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })

                    <div class="col-12">
                        @if (ViewBag.canEdit)
                        {
                            <input type="submit" value="Save" class="btn btn-primary mt-1 me-1 waves-effect waves-float waves-light" />}

                        @Html.ActionLink("Back to Products", "Index", null, htmlAttributes: new { @class = "btn btn-outline-secondary mt-1 waves-effect" })
                    </div>

                </div>

            </form>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Products", "Index")
</div>


@Scripts.Render("~/Content/Theme/app-assets/vendors/js/jquery/jquery.min.js")

<script src="~/Content/Theme/app-assets/vendors/js/forms/select/select2.full.min.js"></script>

<script src="~/Content/Theme/app-assets/js/scripts/forms/form-select2.js"></script>